name: Node.js CI

on:
  push:
    branches: ['dev']
  pull_request:
    branches: ['dev']

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 20
        uses: actions/setup-node@v3
        with:
          node-version: 20.x
          cache: 'npm'
      - run: npm ci
      - run: npm run build

  test_unit:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 20
        uses: actions/setup-node@v3
        with:
          node-version: 20.x
          cache: 'npm'
      - run: npm ci
      - run: npm run test:unit
  test_integration:
    runs-on: ubuntu-latest
    needs: [build, test_unit]
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: danylo
          POSTGRES_PASSWORD: root
          POSTGRES_DB: tests
        ports:
          - 5433:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 20
        uses: actions/setup-node@v3
        with:
          node-version: 20.x
          cache: 'npm'
      - name: Install dependencies
        run: npm ci && npm install -g dotenv-cli
      - name: Connect to PostgreSQL
        run: npx prisma migrate deploy
        env:
          DATABASE_URL: postgresql://danylo:root@localhost:5433/tests
      - name: Seed database
        run: npx prisma db seed -- --env test
        env:
          DATABASE_URL: postgresql://danylo:root@localhost:5433/tests
      - name: Run integration tests
        run: npm run test:integration
        env:
          DATABASE_URL: postgresql://danylo:root@localhost:5433/tests
  test_e2e:
    needs: [build, test_unit, test_integration]
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: danylo
          POSTGRES_PASSWORD: root
          POSTGRES_DB: tests
        ports:
          - 5433:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 20
        uses: actions/setup-node@v3
        with:
          node-version: 20.x
          cache: 'npm'
      - name: Install dependencies
        run: npm install -g @nestjs/cli & npm i
      - name: Connect to PostgreSQL
        run: npx prisma migrate deploy
        env:
          DATABASE_URL: postgresql://danylo:root@localhost:5433/tests
      - name: Seed database
        run: npx prisma db seed -- --env test
        env:
          DATABASE_URL: postgresql://danylo:root@localhost:5433/tests
      - name: Run API tests
        run: |
          npm run start:dev & 
          sleep 20
          npm run test:e2e:ci
        env:
          DATABASE_URL: postgresql://danylo:root@localhost:5433/tests
          JWT_SECRET: 'secretKey'
          SG_API_KEY: ${{ secrets.SG_API_KEY }}
          JWT_ACCESS_EXPIRES: 360s
          JWT_REFRESH_EXPIRES: 30d
          PORT: 9200
          ENV: dev
