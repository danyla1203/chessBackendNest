name: Node.js CI

on:
  push:
    branches: ['dev']
  pull_request:
    branches: ['dev']

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x, 18.x]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - run: npm ci
      - run: npm run build
  test_unit:
    runs-on: ubuntu-latest
    container: node:10.18-jessie
    needs: build

    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: npm ci
      - run: npm run test:unit
  test_integration:
    runs-on: ubuntu-latest
    container: node:10.18-jessie
    needs: [build, test_unit]

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: danylo
          POSTGRES_PASSWORD: root
          POSTGRES_DB: tests
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Install dependencies
        run: npm ci
      - name: Connect to PostgreSQL
        run: npx prisma migrate deploy
        env:
          DATABASE_URL: postgresql://danylo:root@postgres:5432/tests
      - name: Run integration tests
        run: npm run test:integration


